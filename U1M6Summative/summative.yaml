openapi: 3.0.0
info:
  title: Invoice Service
  description:
    A simple service that allows CRUD operations for a customer inventory
    system.
  version: 0.0.1
servers:
  - url: 'http://localhost:8080'
    description: Local dev server
paths:
  /customer:
    post:
      summary: Creates a new customer entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: A Customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete customer information. Some required fields missing.
  /customer/{id}:
    get:
      summary: Retrieves the entry for the customer with the give ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the customer you would like to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Customer object matching given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      summary: Deletes the entry for the customer with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the customer you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Customer successfully deleted.
    put:
      summary: Updated the entry for the customer with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the customer you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer successfully updated.
        '422':
          description: Customer ID on path mush match the ID in the Customer object
  /item:
    post:
      summary: Creates a new item entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: An Item object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete item information. Some required fields missing.
  /item/{id}:
    get:
      summary: Retrieves the entry for the item with the give ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the item you would like to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Item object matching given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
    delete:
      summary: Deletes the entry for the item with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the item you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Item successfully deleted.
    put:
      summary: Updated the entry for the item with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the item you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Item successfully updated.
        '422':
          description: Item ID on path mush match the ID in the Item object.
  /invoice:
    post:
      summary: Creates a new invoice entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          description: An invoice object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete invoice information. Some required fields missing
  /invoice/{id}:
    get:
      summary: Retrieves the entry for the invoice with the give ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the invoice you would like to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Invoice object matching given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
    delete:
      summary: Deletes the entry for the customer with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the customer you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Customer successfully deleted.
  /invoice/customer/{customerId}:
    get:
      summary: Retrieves the entry for the invoice with the give customer ID.
      parameters:
        - name: customerId
          in: path
          required: true
          description: ID of the customer you would like to retrieve the invoice for.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Invoice object matching given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
components:
  schemas:
    Customer:
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        company:
          type: string
        phone:
          type: string
      required:
        - firstName
        - lastName
        - email
        - company
        - phone
    Item:
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        dailyRate:
          type: number
      required:
        - name
        - description
        - dailyRate
    Invoice:
      properties:
        id:
          type: integer
        customerId:
          type: integer
        orderDate:
          type: string
        pickupDate:
          type: string
        returnDate:
          type: string
        lateFee:
          type: number
        invoiceItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
      required:
        - customerId
        - orderDate
        - pickupDate
        - returnDate
        - lateFee
        - invoiceItems
    InvoiceItem:
      properties:
        id:
          type: integer
        invoiceId:
          type: integer
        itemId:
          type: integer
        quantity:
          type: integer
        unitRate:
          type : number
        discount:
          type: number
      required:
        - invoiceId
        - itemId
        - quantity
        - unitRate
        - discount
  Collapse

